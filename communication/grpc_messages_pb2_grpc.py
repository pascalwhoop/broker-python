# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import communication.grpc_messages_pb2 as grpc__messages__pb2


class ContextManagerServiceStub(object):
  """SERVICES
  ====================================================

  mapping of the samplebrokers ContextManagerService callbacks "handleMessage(X)"
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.handlePBBankTransaction = channel.unary_unary(
        '/ContextManagerService/handlePBBankTransaction',
        request_serializer=grpc__messages__pb2.PBBankTransaction.SerializeToString,
        response_deserializer=grpc__messages__pb2.Empty.FromString,
        )
    self.handlePBCashPosition = channel.unary_unary(
        '/ContextManagerService/handlePBCashPosition',
        request_serializer=grpc__messages__pb2.PBCashPosition.SerializeToString,
        response_deserializer=grpc__messages__pb2.Empty.FromString,
        )
    self.handlePBDistributionReport = channel.unary_unary(
        '/ContextManagerService/handlePBDistributionReport',
        request_serializer=grpc__messages__pb2.PBDistributionReport.SerializeToString,
        response_deserializer=grpc__messages__pb2.Empty.FromString,
        )
    self.handlePBCompetition = channel.unary_unary(
        '/ContextManagerService/handlePBCompetition',
        request_serializer=grpc__messages__pb2.PBCompetition.SerializeToString,
        response_deserializer=grpc__messages__pb2.Empty.FromString,
        )
    self.handlePBProperties = channel.unary_unary(
        '/ContextManagerService/handlePBProperties',
        request_serializer=grpc__messages__pb2.PBProperties.SerializeToString,
        response_deserializer=grpc__messages__pb2.Empty.FromString,
        )


class ContextManagerServiceServicer(object):
  """SERVICES
  ====================================================

  mapping of the samplebrokers ContextManagerService callbacks "handleMessage(X)"
  """

  def handlePBBankTransaction(self, request, context):
    """in java, these are overloaded with different class types.
    GRPC doesn't allow same names so we name them as so
    handle<messagetype>()
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def handlePBCashPosition(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def handlePBDistributionReport(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def handlePBCompetition(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def handlePBProperties(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ContextManagerServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'handlePBBankTransaction': grpc.unary_unary_rpc_method_handler(
          servicer.handlePBBankTransaction,
          request_deserializer=grpc__messages__pb2.PBBankTransaction.FromString,
          response_serializer=grpc__messages__pb2.Empty.SerializeToString,
      ),
      'handlePBCashPosition': grpc.unary_unary_rpc_method_handler(
          servicer.handlePBCashPosition,
          request_deserializer=grpc__messages__pb2.PBCashPosition.FromString,
          response_serializer=grpc__messages__pb2.Empty.SerializeToString,
      ),
      'handlePBDistributionReport': grpc.unary_unary_rpc_method_handler(
          servicer.handlePBDistributionReport,
          request_deserializer=grpc__messages__pb2.PBDistributionReport.FromString,
          response_serializer=grpc__messages__pb2.Empty.SerializeToString,
      ),
      'handlePBCompetition': grpc.unary_unary_rpc_method_handler(
          servicer.handlePBCompetition,
          request_deserializer=grpc__messages__pb2.PBCompetition.FromString,
          response_serializer=grpc__messages__pb2.Empty.SerializeToString,
      ),
      'handlePBProperties': grpc.unary_unary_rpc_method_handler(
          servicer.handlePBProperties,
          request_deserializer=grpc__messages__pb2.PBProperties.FromString,
          response_serializer=grpc__messages__pb2.Empty.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ContextManagerService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class MarketManagerServiceStub(object):
  """mapping of the samplebrokers MarketManagerService callbacks "handleMessage(X)"
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.handlePBActivate = channel.unary_unary(
        '/MarketManagerService/handlePBActivate',
        request_serializer=grpc__messages__pb2.PBActivate.SerializeToString,
        response_deserializer=grpc__messages__pb2.Empty.FromString,
        )
    self.handlePBCompetition = channel.unary_unary(
        '/MarketManagerService/handlePBCompetition',
        request_serializer=grpc__messages__pb2.PBCompetition.SerializeToString,
        response_deserializer=grpc__messages__pb2.Empty.FromString,
        )
    self.handlePBBalancingTransaction = channel.unary_unary(
        '/MarketManagerService/handlePBBalancingTransaction',
        request_serializer=grpc__messages__pb2.PBBalancingTransaction.SerializeToString,
        response_deserializer=grpc__messages__pb2.Empty.FromString,
        )
    self.handlePBClearedTrade = channel.unary_unary(
        '/MarketManagerService/handlePBClearedTrade',
        request_serializer=grpc__messages__pb2.PBClearedTrade.SerializeToString,
        response_deserializer=grpc__messages__pb2.Empty.FromString,
        )
    self.handlePBDistributionTransaction = channel.unary_unary(
        '/MarketManagerService/handlePBDistributionTransaction',
        request_serializer=grpc__messages__pb2.PBDistributionTransaction.SerializeToString,
        response_deserializer=grpc__messages__pb2.Empty.FromString,
        )
    self.handlePBCapacityTransaction = channel.unary_unary(
        '/MarketManagerService/handlePBCapacityTransaction',
        request_serializer=grpc__messages__pb2.PBCapacityTransaction.SerializeToString,
        response_deserializer=grpc__messages__pb2.Empty.FromString,
        )
    self.handlePBMarketBootstrapData = channel.unary_unary(
        '/MarketManagerService/handlePBMarketBootstrapData',
        request_serializer=grpc__messages__pb2.PBMarketBootstrapData.SerializeToString,
        response_deserializer=grpc__messages__pb2.Empty.FromString,
        )
    self.handlePBMarketPosition = channel.unary_unary(
        '/MarketManagerService/handlePBMarketPosition',
        request_serializer=grpc__messages__pb2.PBMarketPosition.SerializeToString,
        response_deserializer=grpc__messages__pb2.Empty.FromString,
        )
    self.handlePBMarketTransaction = channel.unary_unary(
        '/MarketManagerService/handlePBMarketTransaction',
        request_serializer=grpc__messages__pb2.PBMarketTransaction.SerializeToString,
        response_deserializer=grpc__messages__pb2.Empty.FromString,
        )
    self.handlePBOrderbook = channel.unary_unary(
        '/MarketManagerService/handlePBOrderbook',
        request_serializer=grpc__messages__pb2.PBOrderbook.SerializeToString,
        response_deserializer=grpc__messages__pb2.Empty.FromString,
        )
    self.handlePBWeatherForecast = channel.unary_unary(
        '/MarketManagerService/handlePBWeatherForecast',
        request_serializer=grpc__messages__pb2.PBWeatherForecast.SerializeToString,
        response_deserializer=grpc__messages__pb2.Empty.FromString,
        )
    self.handlePBWeatherReport = channel.unary_unary(
        '/MarketManagerService/handlePBWeatherReport',
        request_serializer=grpc__messages__pb2.PBWeatherReport.SerializeToString,
        response_deserializer=grpc__messages__pb2.Empty.FromString,
        )
    self.handlePBBalanceReport = channel.unary_unary(
        '/MarketManagerService/handlePBBalanceReport',
        request_serializer=grpc__messages__pb2.PBBalanceReport.SerializeToString,
        response_deserializer=grpc__messages__pb2.Empty.FromString,
        )


class MarketManagerServiceServicer(object):
  """mapping of the samplebrokers MarketManagerService callbacks "handleMessage(X)"
  """

  def handlePBActivate(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def handlePBCompetition(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def handlePBBalancingTransaction(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def handlePBClearedTrade(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def handlePBDistributionTransaction(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def handlePBCapacityTransaction(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def handlePBMarketBootstrapData(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def handlePBMarketPosition(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def handlePBMarketTransaction(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def handlePBOrderbook(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def handlePBWeatherForecast(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def handlePBWeatherReport(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def handlePBBalanceReport(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MarketManagerServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'handlePBActivate': grpc.unary_unary_rpc_method_handler(
          servicer.handlePBActivate,
          request_deserializer=grpc__messages__pb2.PBActivate.FromString,
          response_serializer=grpc__messages__pb2.Empty.SerializeToString,
      ),
      'handlePBCompetition': grpc.unary_unary_rpc_method_handler(
          servicer.handlePBCompetition,
          request_deserializer=grpc__messages__pb2.PBCompetition.FromString,
          response_serializer=grpc__messages__pb2.Empty.SerializeToString,
      ),
      'handlePBBalancingTransaction': grpc.unary_unary_rpc_method_handler(
          servicer.handlePBBalancingTransaction,
          request_deserializer=grpc__messages__pb2.PBBalancingTransaction.FromString,
          response_serializer=grpc__messages__pb2.Empty.SerializeToString,
      ),
      'handlePBClearedTrade': grpc.unary_unary_rpc_method_handler(
          servicer.handlePBClearedTrade,
          request_deserializer=grpc__messages__pb2.PBClearedTrade.FromString,
          response_serializer=grpc__messages__pb2.Empty.SerializeToString,
      ),
      'handlePBDistributionTransaction': grpc.unary_unary_rpc_method_handler(
          servicer.handlePBDistributionTransaction,
          request_deserializer=grpc__messages__pb2.PBDistributionTransaction.FromString,
          response_serializer=grpc__messages__pb2.Empty.SerializeToString,
      ),
      'handlePBCapacityTransaction': grpc.unary_unary_rpc_method_handler(
          servicer.handlePBCapacityTransaction,
          request_deserializer=grpc__messages__pb2.PBCapacityTransaction.FromString,
          response_serializer=grpc__messages__pb2.Empty.SerializeToString,
      ),
      'handlePBMarketBootstrapData': grpc.unary_unary_rpc_method_handler(
          servicer.handlePBMarketBootstrapData,
          request_deserializer=grpc__messages__pb2.PBMarketBootstrapData.FromString,
          response_serializer=grpc__messages__pb2.Empty.SerializeToString,
      ),
      'handlePBMarketPosition': grpc.unary_unary_rpc_method_handler(
          servicer.handlePBMarketPosition,
          request_deserializer=grpc__messages__pb2.PBMarketPosition.FromString,
          response_serializer=grpc__messages__pb2.Empty.SerializeToString,
      ),
      'handlePBMarketTransaction': grpc.unary_unary_rpc_method_handler(
          servicer.handlePBMarketTransaction,
          request_deserializer=grpc__messages__pb2.PBMarketTransaction.FromString,
          response_serializer=grpc__messages__pb2.Empty.SerializeToString,
      ),
      'handlePBOrderbook': grpc.unary_unary_rpc_method_handler(
          servicer.handlePBOrderbook,
          request_deserializer=grpc__messages__pb2.PBOrderbook.FromString,
          response_serializer=grpc__messages__pb2.Empty.SerializeToString,
      ),
      'handlePBWeatherForecast': grpc.unary_unary_rpc_method_handler(
          servicer.handlePBWeatherForecast,
          request_deserializer=grpc__messages__pb2.PBWeatherForecast.FromString,
          response_serializer=grpc__messages__pb2.Empty.SerializeToString,
      ),
      'handlePBWeatherReport': grpc.unary_unary_rpc_method_handler(
          servicer.handlePBWeatherReport,
          request_deserializer=grpc__messages__pb2.PBWeatherReport.FromString,
          response_serializer=grpc__messages__pb2.Empty.SerializeToString,
      ),
      'handlePBBalanceReport': grpc.unary_unary_rpc_method_handler(
          servicer.handlePBBalanceReport,
          request_deserializer=grpc__messages__pb2.PBBalanceReport.FromString,
          response_serializer=grpc__messages__pb2.Empty.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'MarketManagerService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class PortfolioManagerServiceStub(object):
  """mapping of the samplebrokers PortfolioManagerService callbacks "handleMessage(X)"
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.handlePBCustomerBootstrapData = channel.unary_unary(
        '/PortfolioManagerService/handlePBCustomerBootstrapData',
        request_serializer=grpc__messages__pb2.PBCustomerBootstrapData.SerializeToString,
        response_deserializer=grpc__messages__pb2.Empty.FromString,
        )
    self.handlePBTariffSpecification = channel.unary_unary(
        '/PortfolioManagerService/handlePBTariffSpecification',
        request_serializer=grpc__messages__pb2.PBTariffSpecification.SerializeToString,
        response_deserializer=grpc__messages__pb2.Empty.FromString,
        )
    self.handlePBTariffStatus = channel.unary_unary(
        '/PortfolioManagerService/handlePBTariffStatus',
        request_serializer=grpc__messages__pb2.PBTariffStatus.SerializeToString,
        response_deserializer=grpc__messages__pb2.Empty.FromString,
        )
    self.handlePBTariffTransaction = channel.unary_unary(
        '/PortfolioManagerService/handlePBTariffTransaction',
        request_serializer=grpc__messages__pb2.PBTariffTransaction.SerializeToString,
        response_deserializer=grpc__messages__pb2.Empty.FromString,
        )
    self.handlePBTariffRevoke = channel.unary_unary(
        '/PortfolioManagerService/handlePBTariffRevoke',
        request_serializer=grpc__messages__pb2.PBTariffRevoke.SerializeToString,
        response_deserializer=grpc__messages__pb2.Empty.FromString,
        )
    self.handlePBBalancingControlEvent = channel.unary_unary(
        '/PortfolioManagerService/handlePBBalancingControlEvent',
        request_serializer=grpc__messages__pb2.PBBalancingControlEvent.SerializeToString,
        response_deserializer=grpc__messages__pb2.Empty.FromString,
        )


class PortfolioManagerServiceServicer(object):
  """mapping of the samplebrokers PortfolioManagerService callbacks "handleMessage(X)"
  """

  def handlePBCustomerBootstrapData(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def handlePBTariffSpecification(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def handlePBTariffStatus(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def handlePBTariffTransaction(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def handlePBTariffRevoke(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def handlePBBalancingControlEvent(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_PortfolioManagerServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'handlePBCustomerBootstrapData': grpc.unary_unary_rpc_method_handler(
          servicer.handlePBCustomerBootstrapData,
          request_deserializer=grpc__messages__pb2.PBCustomerBootstrapData.FromString,
          response_serializer=grpc__messages__pb2.Empty.SerializeToString,
      ),
      'handlePBTariffSpecification': grpc.unary_unary_rpc_method_handler(
          servicer.handlePBTariffSpecification,
          request_deserializer=grpc__messages__pb2.PBTariffSpecification.FromString,
          response_serializer=grpc__messages__pb2.Empty.SerializeToString,
      ),
      'handlePBTariffStatus': grpc.unary_unary_rpc_method_handler(
          servicer.handlePBTariffStatus,
          request_deserializer=grpc__messages__pb2.PBTariffStatus.FromString,
          response_serializer=grpc__messages__pb2.Empty.SerializeToString,
      ),
      'handlePBTariffTransaction': grpc.unary_unary_rpc_method_handler(
          servicer.handlePBTariffTransaction,
          request_deserializer=grpc__messages__pb2.PBTariffTransaction.FromString,
          response_serializer=grpc__messages__pb2.Empty.SerializeToString,
      ),
      'handlePBTariffRevoke': grpc.unary_unary_rpc_method_handler(
          servicer.handlePBTariffRevoke,
          request_deserializer=grpc__messages__pb2.PBTariffRevoke.FromString,
          response_serializer=grpc__messages__pb2.Empty.SerializeToString,
      ),
      'handlePBBalancingControlEvent': grpc.unary_unary_rpc_method_handler(
          servicer.handlePBBalancingControlEvent,
          request_deserializer=grpc__messages__pb2.PBBalancingControlEvent.FromString,
          response_serializer=grpc__messages__pb2.Empty.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'PortfolioManagerService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class GameServiceStub(object):
  """handles messages that are "meta", i.e. regarding the game itself
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.handlePBTimeslotComplete = channel.unary_unary(
        '/GameService/handlePBTimeslotComplete',
        request_serializer=grpc__messages__pb2.PBTimeslotComplete.SerializeToString,
        response_deserializer=grpc__messages__pb2.Empty.FromString,
        )
    self.handlePBTimeslotUpdate = channel.unary_unary(
        '/GameService/handlePBTimeslotUpdate',
        request_serializer=grpc__messages__pb2.PBTimeslotUpdate.SerializeToString,
        response_deserializer=grpc__messages__pb2.Empty.FromString,
        )
    self.handlePBSimPause = channel.unary_unary(
        '/GameService/handlePBSimPause',
        request_serializer=grpc__messages__pb2.PBSimPause.SerializeToString,
        response_deserializer=grpc__messages__pb2.Empty.FromString,
        )
    self.handlePBSimResume = channel.unary_unary(
        '/GameService/handlePBSimResume',
        request_serializer=grpc__messages__pb2.PBSimResume.SerializeToString,
        response_deserializer=grpc__messages__pb2.Empty.FromString,
        )


class GameServiceServicer(object):
  """handles messages that are "meta", i.e. regarding the game itself
  """

  def handlePBTimeslotComplete(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def handlePBTimeslotUpdate(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def handlePBSimPause(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def handlePBSimResume(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_GameServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'handlePBTimeslotComplete': grpc.unary_unary_rpc_method_handler(
          servicer.handlePBTimeslotComplete,
          request_deserializer=grpc__messages__pb2.PBTimeslotComplete.FromString,
          response_serializer=grpc__messages__pb2.Empty.SerializeToString,
      ),
      'handlePBTimeslotUpdate': grpc.unary_unary_rpc_method_handler(
          servicer.handlePBTimeslotUpdate,
          request_deserializer=grpc__messages__pb2.PBTimeslotUpdate.FromString,
          response_serializer=grpc__messages__pb2.Empty.SerializeToString,
      ),
      'handlePBSimPause': grpc.unary_unary_rpc_method_handler(
          servicer.handlePBSimPause,
          request_deserializer=grpc__messages__pb2.PBSimPause.FromString,
          response_serializer=grpc__messages__pb2.Empty.SerializeToString,
      ),
      'handlePBSimResume': grpc.unary_unary_rpc_method_handler(
          servicer.handlePBSimResume,
          request_deserializer=grpc__messages__pb2.PBSimResume.FromString,
          response_serializer=grpc__messages__pb2.Empty.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'GameService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class ExtraSpyMessageManagerServiceStub(object):
  """these are messages that other brokers send and that a spy broker
  may receive because he gets all messages forwarded that others sent to the server.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.handlePBOrder = channel.unary_unary(
        '/ExtraSpyMessageManagerService/handlePBOrder',
        request_serializer=grpc__messages__pb2.PBOrder.SerializeToString,
        response_deserializer=grpc__messages__pb2.Empty.FromString,
        )
    self.handlePBTariffSpec = channel.unary_unary(
        '/ExtraSpyMessageManagerService/handlePBTariffSpec',
        request_serializer=grpc__messages__pb2.PBTariffSpecification.SerializeToString,
        response_deserializer=grpc__messages__pb2.Empty.FromString,
        )


class ExtraSpyMessageManagerServiceServicer(object):
  """these are messages that other brokers send and that a spy broker
  may receive because he gets all messages forwarded that others sent to the server.
  """

  def handlePBOrder(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def handlePBTariffSpec(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ExtraSpyMessageManagerServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'handlePBOrder': grpc.unary_unary_rpc_method_handler(
          servicer.handlePBOrder,
          request_deserializer=grpc__messages__pb2.PBOrder.FromString,
          response_serializer=grpc__messages__pb2.Empty.SerializeToString,
      ),
      'handlePBTariffSpec': grpc.unary_unary_rpc_method_handler(
          servicer.handlePBTariffSpec,
          request_deserializer=grpc__messages__pb2.PBTariffSpecification.FromString,
          response_serializer=grpc__messages__pb2.Empty.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ExtraSpyMessageManagerService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class ConnectionServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.pingpong = channel.unary_unary(
        '/ConnectionService/pingpong',
        request_serializer=grpc__messages__pb2.Empty.SerializeToString,
        response_deserializer=grpc__messages__pb2.Empty.FromString,
        )


class ConnectionServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def pingpong(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ConnectionServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'pingpong': grpc.unary_unary_rpc_method_handler(
          servicer.pingpong,
          request_deserializer=grpc__messages__pb2.Empty.FromString,
          response_serializer=grpc__messages__pb2.Empty.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ConnectionService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class SubmitAdapterStub(object):
  """answers to the server from the (Python/whatever) client
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.submitOrder = channel.unary_unary(
        '/SubmitAdapter/submitOrder',
        request_serializer=grpc__messages__pb2.PBOrder.SerializeToString,
        response_deserializer=grpc__messages__pb2.PBCallCompleted.FromString,
        )
    self.submitTariffSpec = channel.unary_unary(
        '/SubmitAdapter/submitTariffSpec',
        request_serializer=grpc__messages__pb2.PBTariffSpecification.SerializeToString,
        response_deserializer=grpc__messages__pb2.PBCallCompleted.FromString,
        )


class SubmitAdapterServicer(object):
  """answers to the server from the (Python/whatever) client
  """

  def submitOrder(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def submitTariffSpec(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SubmitAdapterServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'submitOrder': grpc.unary_unary_rpc_method_handler(
          servicer.submitOrder,
          request_deserializer=grpc__messages__pb2.PBOrder.FromString,
          response_serializer=grpc__messages__pb2.PBCallCompleted.SerializeToString,
      ),
      'submitTariffSpec': grpc.unary_unary_rpc_method_handler(
          servicer.submitTariffSpec,
          request_deserializer=grpc__messages__pb2.PBTariffSpecification.FromString,
          response_serializer=grpc__messages__pb2.PBCallCompleted.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'SubmitAdapter', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
